// import 'package:flutter/material.dart';
// import 'package:flutter/services.dart';
// import 'BalanceTabScreen.dart';
// import 'EmailNotReceivedPage.dart';

// class CreateAccountForm extends StatefulWidget {
//   @override
//   _CreateAccountFormState createState() => _CreateAccountFormState();
// }

// class _CreateAccountFormState extends State<CreateAccountForm> {
//   final _formKey = GlobalKey<FormState>();
//   final TextEditingController _passwordController = TextEditingController();
//   final TextEditingController _confirmPasswordController = TextEditingController();

//   bool _obscurePassword = true;
//   bool _obscureConfirmPassword = true;

//   @override
//   void dispose() {
//     _passwordController.dispose();
//     _confirmPasswordController.dispose();
//     super.dispose();
//   }

//   String? _validatePassword(String? value) {
//     if (value == null || value.isEmpty) {
//       return 'Password is required';
//     }
//     if (!RegExp(r'(?=.*[A-Z])').hasMatch(value)) {
//       return 'Must contain at least one uppercase letter';
//     }
//     if (!RegExp(r'(?=.*[a-z])').hasMatch(value)) {
//       return 'Must contain at least one lowercase letter';
//     }
//     if (!RegExp(r'(?=.*[!@#\$&*~])').hasMatch(value)) {
//       return 'Must contain at least one special character';
//     }
//     if (value.length < 8) {
//       return 'Must be at least 8 characters long';
//     }
//     return null;
//   }

//   @override
//   Widget build(BuildContext context) {
//     return Scaffold(
//       appBar: 
//       AppBar(
//         leading: IconButton(
//           icon: const Icon(Icons.arrow_back, color: Colors.white),
//           onPressed: () {
//             Navigator.push(
//               context,
//               MaterialPageRoute(builder: (context) => BalanceTabScreen()),
//             );
//           },
//         ),
//         title: const Text(
//           'Create Your Account',
//           style: TextStyle(color: Colors.white),
//         ),
//         backgroundColor: const Color(0xFF0b5369),
//         centerTitle: true,
//         toolbarHeight: 70.0,
//       ),
//       body: Padding(
//         padding: const EdgeInsets.all(16.0),
//         child: Form(
//           key: _formKey,
//           child: ListView(
//             children: [
//                Text(
//       'Your name',
//       style: TextStyle(
//         fontSize: 18,
//         fontWeight: FontWeight.bold,
//         color: const Color(0xFF0b5369)
//       ),
//     ),
//     SizedBox(height: 8), // Adds space between the heading and the text box
//     TextFormField(
//       decoration: InputDecoration(
//         hintText: 'e.g. Sandra B',
//         border: OutlineInputBorder(),
//       ),
//     ),
//     Text(
//       'Your email', // Label above the field
//       style: TextStyle(
//         fontSize: 18,
//         fontWeight: FontWeight.bold,
//          color: const Color(0xFF0b5369)
//       ),
//     ),
//     SizedBox(height: 8), // Space between label and field
//   TextFormField(
//       decoration: InputDecoration(
//         hintText: 'Enter your email here',
//         border: OutlineInputBorder(),
//       ),
//       keyboardType: TextInputType.emailAddress,
//       validator: (value) {
//         if (value == null || value.isEmpty) {
//           return 'Email is required';
//         }
//         if (!RegExp(r'^[\w-.]+@([\w-]+\.)+[\w-]{2,4}$').hasMatch(value)) {
//           return 'Enter a valid email';
//         }
//         return null;
//       },
//     ),
//     SizedBox(height: 16), // Adds space after the email field

//     Text(
//       'Create a password',
//       style: TextStyle(
//         fontSize: 18,
//         fontWeight: FontWeight.bold,
//          color: const Color(0xFF0b5369)
//       ),
//     ),
//     SizedBox(height: 8), // Adds space between the heading and the password field
//     TextFormField(
//       controller: _passwordController,
//       decoration: InputDecoration(
//         hintText: 'Enter a password',
//         border: OutlineInputBorder(),
//         suffixIcon: IconButton(
//           icon: Icon(
//             _obscurePassword ? Icons.visibility_off : Icons.visibility,
//           ),
//           onPressed: () {
//             setState(() {
//               _obscurePassword = !_obscurePassword;
//             });
//           },
//         ),
//       ),
//       obscureText: _obscurePassword,
//       validator: _validatePassword,
//     ),
//               SizedBox(height: 8),
//               Row(
//                 mainAxisAlignment: MainAxisAlignment.start,
//                 children: [
//                   Text('A One uppercase   a One lowercase', style: TextStyle(
//          color: const Color(0xFF0b5369)
//       )),
//                 ],
//               ),
//               Row(
//                 mainAxisAlignment: MainAxisAlignment.start,
//                 children: [
//                   Text('% One special e.g. #!?   \n8+ Eight plus characters',  style: TextStyle(
//          color: const Color(0xFF0b5369)
//       ),),
//                 ],
//               ),
//               SizedBox(height: 16),
//           Text(
//       'Confirm password', // Label above the field
//       style: TextStyle(
//         fontSize: 18,
//         fontWeight: FontWeight.bold,
//          color: const Color(0xFF0b5369)
//       ),
//     ),
//     SizedBox(height: 8), // Space between label and field
//     TextFormField(
//       controller: _confirmPasswordController,
//       decoration:InputDecoration(
//   hintText: 'Enter password again',
//   hintStyle: const TextStyle(
//     color: Color(0xFF4C47F7), // Hint text color
//   ),
//   border: OutlineInputBorder(
//     borderRadius: BorderRadius.circular(8.0),
//   ),
//   enabledBorder: OutlineInputBorder(
//     borderSide: const BorderSide(
//       color: Color(0xFF4C47F7), // Border color when not focused
//     ),
//     borderRadius: BorderRadius.circular(8.0),
//   ),
//   focusedBorder: OutlineInputBorder(
//     borderSide: const BorderSide(
//       color: Color(0xFF4C47F7), // Border color when focused
//     ),
//     borderRadius: BorderRadius.circular(8.0),
//   ),
//   suffixIcon: IconButton(
//     icon: Icon(
//       _obscureConfirmPassword ? Icons.visibility_off : Icons.visibility,
//       color: const Color(0xFF4C47F7), // Icon color
//     ),
//     onPressed: () {
//       setState(() {
//         _obscureConfirmPassword = !_obscureConfirmPassword;
//       });
//     },
//   ),
// ),

//       obscureText: _obscureConfirmPassword,
//       validator: (value) {
//         if (value == null || value.isEmpty) {
//           return 'Confirm password is required';
//         }
//         if (value != _passwordController.text) {
//           return 'Passwords do not match';
//         }
//         return null;
//       },
//     ),
//               SizedBox(height: 16),
//               ElevatedButton(
//                       onPressed: () {
//                   if (_formKey.currentState!.validate()) {
//                     // ScaffoldMessenger.of(context).showSnackBar(
//                     //   SnackBar(content: Text('Account created successfully')),
//                     // );
//   Navigator.push(
//               context,
//               MaterialPageRoute(builder: (context) => EmailNotReceivedPage()),
//             );
//                   }
//                 },
//                       style: ElevatedButton.styleFrom(
//                         backgroundColor: const Color(0xFF4C47F7), // Blue button color
//                         padding: const EdgeInsets.symmetric(vertical: 12.0),
//                         shape: RoundedRectangleBorder(
//                           borderRadius: BorderRadius.circular(8.0),
//                         ),
//                       ),
//                       child: const Text(
//                         'Next',
//                         style: TextStyle(
//                           fontSize: 16,
//                           color: Colors.white,
//                           fontWeight: FontWeight.bold,
//                         ),
//                       ),
//                     ),
             
//             ],
//           ),
//         ),
//       ),
//     );
//   }
// }

import 'package:flutter/material.dart';
import 'package:flutter/services.dart';
import 'BalanceTabScreen.dart';
import 'EmailNotReceivedPage.dart';
import 'CheckEmailPage.dart';

class CreateAccountForm extends StatefulWidget {
  @override
  _CreateAccountFormState createState() => _CreateAccountFormState();
}

class _CreateAccountFormState extends State<CreateAccountForm> {
  final _formKey = GlobalKey<FormState>();
  final TextEditingController _passwordController = TextEditingController();
  final TextEditingController _confirmPasswordController = TextEditingController();
  final TextEditingController _emailController = TextEditingController(); // Controller for email

  bool _obscurePassword = true;
  bool _obscureConfirmPassword = true;

  @override
  void dispose() {
    _passwordController.dispose();
    _confirmPasswordController.dispose();
    _emailController.dispose(); // Dispose the email controller as well
    super.dispose();
  }

  String? _validatePassword(String? value) {
    if (value == null || value.isEmpty) {
      return 'Password is required';
    }
    if (!RegExp(r'(?=.*[A-Z])').hasMatch(value)) {
      return 'Must contain at least one uppercase letter';
    }
    if (!RegExp(r'(?=.*[a-z])').hasMatch(value)) {
      return 'Must contain at least one lowercase letter';
    }
    if (!RegExp(r'(?=.*[!@#\$&*~])').hasMatch(value)) {
      return 'Must contain at least one special character';
    }
    if (value.length < 8) {
      return 'Must be at least 8 characters long';
    }
    return null;
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        leading: IconButton(
          icon: const Icon(Icons.arrow_back, color: Colors.white),
          onPressed: () {
            Navigator.push(
              context,
              MaterialPageRoute(builder: (context) => BalanceTabScreen()),
            );
          },
        ),
        title: const Text(
          'Create Your Account',
          style: TextStyle(color: Colors.white),
        ),
        backgroundColor: const Color(0xFF0b5369),
        centerTitle: true,
        toolbarHeight: 70.0,
      ),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Form(
          key: _formKey,
          child: ListView(
            children: [
              Text(
                'Your name',
                style: TextStyle(
                    fontSize: 18,
                    fontWeight: FontWeight.bold,
                    color: const Color(0xFF0b5369)),
              ),
              SizedBox(height: 8),
              TextFormField(
                decoration: InputDecoration(
                  hintText: 'e.g. Sandra B',
                  border: OutlineInputBorder(),
                ),
              ),
              Text(
                'Your email',
                style: TextStyle(
                    fontSize: 18,
                    fontWeight: FontWeight.bold,
                    color: const Color(0xFF0b5369)),
              ),
              SizedBox(height: 8),
              TextFormField(
                controller: _emailController, // Using email controller
                decoration: InputDecoration(
                  hintText: 'Enter your email here',
                  border: OutlineInputBorder(),
                ),
                keyboardType: TextInputType.emailAddress,
                validator: (value) {
                  if (value == null || value.isEmpty) {
                    return 'Email is required';
                  }
                  if (!RegExp(r'^[\w-.]+@([\w-]+\.)+[\w-]{2,4}$')
                      .hasMatch(value)) {
                    return 'Enter a valid email';
                  }
                  return null;
                },
              ),
              SizedBox(height: 16),
              Text(
                'Create a password',
                style: TextStyle(
                    fontSize: 18,
                    fontWeight: FontWeight.bold,
                    color: const Color(0xFF0b5369)),
              ),
              SizedBox(height: 8),
              TextFormField(
                controller: _passwordController,
                decoration: InputDecoration(
                  hintText: 'Enter a password',
                  border: OutlineInputBorder(),
                  suffixIcon: IconButton(
                    icon: Icon(
                      _obscurePassword ? Icons.visibility_off : Icons.visibility,
                    ),
                    onPressed: () {
                      setState(() {
                        _obscurePassword = !_obscurePassword;
                      });
                    },
                  ),
                ),
                obscureText: _obscurePassword,
                validator: _validatePassword,
              ),
              SizedBox(height: 8),
              Row(
                mainAxisAlignment: MainAxisAlignment.start,
                children: [
                  Text('A One uppercase   a One lowercase',
                      style: TextStyle(color: const Color(0xFF0b5369))),
                ],
              ),
              Row(
                mainAxisAlignment: MainAxisAlignment.start,
                children: [
                  Text('% One special e.g. #!?   \n8+ Eight plus characters',
                      style: TextStyle(color: const Color(0xFF0b5369))),
                ],
              ),
              SizedBox(height: 16),
              Text(
                'Confirm password',
                style: TextStyle(
                    fontSize: 18,
                    fontWeight: FontWeight.bold,
                    color: const Color(0xFF0b5369)),
              ),
              SizedBox(height: 8),
              TextFormField(
                controller: _confirmPasswordController,
                decoration: InputDecoration(
                  hintText: 'Enter password again',
                  hintStyle: const TextStyle(color: Color(0xFF4C47F7)),
                  border: OutlineInputBorder(
                    borderRadius: BorderRadius.circular(8.0),
                  ),
                  enabledBorder: OutlineInputBorder(
                    borderSide: const BorderSide(
                      color: Color(0xFF4C47F7),
                    ),
                    borderRadius: BorderRadius.circular(8.0),
                  ),
                  focusedBorder: OutlineInputBorder(
                    borderSide: const BorderSide(
                      color: Color(0xFF4C47F7),
                    ),
                    borderRadius: BorderRadius.circular(8.0),
                  ),
                  suffixIcon: IconButton(
                    icon: Icon(
                      _obscureConfirmPassword
                          ? Icons.visibility_off
                          : Icons.visibility,
                      color: const Color(0xFF4C47F7),
                    ),
                    onPressed: () {
                      setState(() {
                        _obscureConfirmPassword = !_obscureConfirmPassword;
                      });
                    },
                  ),
                ),
                obscureText: _obscureConfirmPassword,
                validator: (value) {
                  if (value == null || value.isEmpty) {
                    return 'Confirm password is required';
                  }
                  if (value != _passwordController.text) {
                    return 'Passwords do not match';
                  }
                  return null;
                },
              ),
              SizedBox(height: 16),
              ElevatedButton(
                onPressed: () {
                  if (_formKey.currentState!.validate()) {
                    // Check the email before navigating
                    String email = _emailController.text;
                    if (email == "premila@gmail.com") {
                      Navigator.push(
                        context,
                        MaterialPageRoute(
                          builder: (context) => EmailNotReceivedPage(),
                        ),
                      );
                    } else {
                      Navigator.push(
                        context,
                        MaterialPageRoute(
                          builder: (context) => CheckEmailPage(),
                        ),
                      );
                    }
                  }
                },
                style: ElevatedButton.styleFrom(
                  backgroundColor: const Color(0xFF4C47F7),
                  padding: const EdgeInsets.symmetric(vertical: 12.0),
                  shape: RoundedRectangleBorder(
                    borderRadius: BorderRadius.circular(8.0),
                  ),
                ),
                child: const Text(
                  'Next',
                  style: TextStyle(
                    fontSize: 16,
                    color: Colors.white,
                    fontWeight: FontWeight.bold,
                  ),
                ),
              ),
            ],
          ),
        ),
      ),
    );
  }
}
